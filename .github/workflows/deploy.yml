name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      BUILD_DIR: cmake-build
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: Setup MSVC (Windows only)
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2.0.0
        with:
          msbuild-architecture: x64
      - name: Build
        run: |
          cmake -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Release
          cmake --build ${{ env.BUILD_DIR }} --target BeamSynth_All --config Release

      - name: Packaging
        run: |
          ZIP_FILE_NAME=BeamSynth_${{ matrix.os }}.zip
          BUILD_OUTPUT_PATH=${{ env.BUILD_DIR }}/src/BeamSynth_artefacts/Release
          BUILD_OUTPUT_PATH_WINDOWS=${{ env.BUILD_DIR }}\\src\\BeamSynth_artefacts\\Release\\*

          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            zip -r "$ZIP_FILE_NAME" "$BUILD_OUTPUT_PATH"
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            pwsh -command "Compress-Archive -Path '${BUILD_OUTPUT_PATH_WINDOWS}' -DestinationPath '${ZIP_FILE_NAME}'"
          fi
